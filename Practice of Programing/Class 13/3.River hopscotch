#include <iostream>
#include <algorithm>
#include <cstring>
#define MAX_VAL 1<<30
using namespace std;
int M,N,L,dis[50005]{};

bool solve(int d){
    int k = 0, prev = 0;
    for(int i = 1; i <= N+1; i++){
        int gap = dis[i] - dis[prev];
        if(gap < d)
            k++;
        else
            prev = i;
        if(k > M)
            return false;
    }
    return true;
}

int main(){
    cin >> L >> N >> M;
    int l = MAX_VAL, r = 0, ans = 0;
    for(int i = 1; i <= N; i++){
        cin >> dis[i];
        int gap = dis[i]-dis[i-1];
        l = min(l,gap);
        r = max(r,gap);
    }
    dis[N+1] = L; 

    while(l <= r){
        int mid = l + (r - l) / 2;
        if(solve(mid)){
            ans = mid;
            l = mid + 1;
        }
        else
            r = mid - 1;
    }
    cout << ans << endl;
}
