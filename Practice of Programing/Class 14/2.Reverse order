#include<iostream>
using namespace std;
int num[100005], b[100005],n;
void merge_order(int a[], int s, int m, int e, int tmp[]){
    int p1 = s, p2 = m + 1,pb = 0;
    while(p1 <= m && p2 <= e){
        if(a[p1] <= a[p2])
            tmp[pb++] = a[p2++];
        else
            tmp[pb++] = a[p1++];
    }
    while(p1 <= m)
        tmp[pb++] = a[p1++];
    while(p2 <= e)
        tmp[pb++] = a[p2++];
    for(int i = 0; i < pb; i++)
        a[s+i] = tmp[i];
}
int sort_order(int a[], int s, int e, int tmp[]){
    int total = 0;
    if(s < e){
        int m = s + (e - s) / 2;
        total += sort_order(a, s, m, tmp);
        total += sort_order(a, m + 1, e, tmp);
        int p1 = s, p2 = m + 1;
        while(p1 <= m && p2 <= e){
            if(a[p1] <= a[p2])
                p2++;
            else if(a[p1] > a[p2]){
                total += e - p2 + 1;
                p1 ++;
            }    
        }
        cout << total << endl;
        for(int i = 0; i <= m - s; i++)
            cout << num[s+i] << " ";
        cout << "|| ";
        for(int i = 0; i < e - m; i++)
            cout << num[m+1+i] << " ";
        cout << endl;
        merge_order(a,s,m,e,tmp);
    }
    return total;
}
int main(){
    cin >> n;
    for(int i = 0; i < n; i++)
        cin >> num[i];

    cout << sort_order(num,0,n - 1,b) << endl;
}
